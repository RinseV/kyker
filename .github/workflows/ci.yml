name: Run CI
on:
    push:
    workflow_dispatch:
jobs:
    build:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: "server"
        # Service containers to run with `runner-job`
        services:
            # Label used to access the service container
            postgres:
                # Docker Hub image
                image: postgres:12
                # Provide the password for postgres
                env:
                    POSTGRES_DB: kruger-test
                    POSTGRES_PASSWORD: postgres
                # Set health checks to wait until postgres has started
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    # Maps tcp port 5432 on service container to the host
                    - 5432:5432
        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: "14.x"

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - uses: actions/cache@v2
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-
            - run: yarn install --frozen-lockfile
            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v1

            - name: Build and push
              id: docker_build
              uses: docker/build-push-action@v2
              with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:latest

            - name: Image digest
              run: echo ${{ steps.docker_build.outputs.digest }}
